class Solution{
    
    // arr: input array
    // n: size of array
    // Function to find the trapped water between the blocks.
    static long trappingWater(int arr[], int n) { 
        // Your code here
          long leftMax[] = new long[n];
        leftMax[0]= arr[0];
        for(int i =1; i<n; i++) {
            leftMax[i] =Math.max(arr[i],leftMax[i-1]);
        }
        long rightMax[]= new long[n];
        rightMax[n-1] = arr[n-1];
        for(int i =n-2; i>=0; i--) {
            rightMax[i]= Math.max(arr[i], rightMax[i+1]);
        }
        
        long tp =0;
        for(int i =0; i<n; i++) {
            long wl = Math.min(leftMax[i], rightMax[i]);
            tp +=wl-arr[i];
        }
        
        return tp;
    } 
}

